name: "Terraform Destroy"

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  TF_VAR_region:             ${{ secrets.TF_VAR_REGION }}
  TF_VAR_availability_zone:  ${{ secrets.TF_VAR_AVAILABILITY_ZONE }}
  TF_VAR_vpc_cidr:           ${{ secrets.TF_VAR_VPC_CIDR }}
  TF_VAR_public_subnet_cidr: ${{ secrets.TF_VAR_PUBLIC_SUBNET_CIDR }}
  TF_VAR_private_subnet_cidr: ${{ secrets.TF_VAR_PRIVATE_SUBNET_CIDR }}
  TF_VAR_instance_type:      ${{ secrets.TF_VAR_INSTANCE_TYPE }}
  TF_VAR_key_name:           ${{ secrets.TF_VAR_KEY_NAME }}
  TF_VAR_admin_cidr:         ${{ secrets.TF_VAR_ADMIN_CIDR }}
  TF_VAR_s3_bucket_name:     ${{ secrets.TF_VAR_S3_BUCKET_NAME }}
  TF_VAR_dynamodb_table_name: ${{ secrets.TF_VAR_DYNAMODB_TABLE_NAME }}
  TF_VAR_nomad_client_count: ${{ secrets.TF_VAR_NOMAD_CLIENT_COUNT }}
  TF_VAR_bastion_public_key: ${{ secrets.TF_VAR_BASTION_PUBLIC_KEY }}
  TF_VAR_NOMAD_AMI_ID:       ${{ secrets.TF_VAR_NOMAD_AMI_ID }}

jobs:
  destroy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: terraform
        run: terraform init -input=false -no-color

      - name: Terraform Destroy
        working-directory: terraform
        run: terraform destroy -auto-approve
